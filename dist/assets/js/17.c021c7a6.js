(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{442:function(s,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"/img/mit/2/bk.jpg",width:"960",height:"540"}})]),s._v(" "),a("h1",{attrs:{id:"为什么用go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么用go"}},[s._v("#")]),s._v(" 为什么用Go")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mit/2/go.png",alt:"why go",title:"go"}})]),s._v(" "),a("ol",[a("li",[s._v("特别简单，仅有25个关键字，没 C++那么多复杂的语法特性")]),s._v(" "),a("li",[s._v("超强并发能力，语言层面支持线程(goroutine)和管道(channel)")]),s._v(" "),a("li",[s._v("类型安全，内存访问安全，很难写出像C++一样内存越界访问等bug")]),s._v(" "),a("li",[s._v("垃圾回收，降低开发人员内存管理的心智负担")])]),s._v(" "),a("h1",{attrs:{id:"多线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[s._v("#")]),s._v(" 多线程")]),s._v(" "),a("p",[s._v("线程是控制并发的重要手段，但处理可能比较棘手。Go中称它们为协程，其他的称它为线程。")]),s._v(" "),a("p",[s._v("多线程允许一个程序同时做很多事情，每个线程都是串行执行的，就像普通的的非线程程序一样。每个线程可以有自己的内存栈、程序计数器、寄存器。但多个线程可以共享内存，也就是共享一个地址空间。")]),s._v(" "),a("h2",{attrs:{id:"为什么是多线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么是多线程"}},[s._v("#")]),s._v(" 为什么是多线程")]),s._v(" "),a("p",[s._v("它们能够很好实现分布式系统所需要的并发性。")]),s._v(" "),a("p",[a("strong",[s._v("I/O并发")])]),s._v(" "),a("p",[s._v("对于单核，IO可能是主要瓶颈，为了充分利用CPU，一个线程在进行IO时，可以让出CPU，让另一个线程进行计算、读取或发送网络消息等。服务端在处理客户端的多个请求时，每个请求都可能阻塞。比如X请求时从磁盘读取数据，Y请求往磁盘写数据。IO并发可以让可以多个请求不阻塞。")]),s._v(" "),a("p",[a("strong",[s._v("多核性能")])]),s._v(" "),a("p",[s._v("充分利用多核CPU，在多个核上并行执行代码。")]),s._v(" "),a("p",[a("strong",[s._v("方便")])]),s._v(" "),a("p",[s._v("在后台启动一个线程，定期执行某件事、周期性的检测worker是否存活。")]),s._v(" "),a("p",[a("strong",[s._v("QA")])]),s._v(" "),a("ol",[a("li",[s._v("是否有多线程的替代方案？基于事件驱动的异步编程，它的特点是包含一个事件循环，当外部事件发生时使用回调机制来触发相应的处理。事件驱动为带来了I/O并发性，并且消除了线程切换成本，但没有多核加速，另外编程会比较复杂，而多线程模型更容易理解一些，毕竟每个线程内执行顺序和代码顺序大体是一致的。")])]),s._v(" "),a("h2",{attrs:{id:"线程的挑战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程的挑战"}},[s._v("#")]),s._v(" 线程的挑战")]),s._v(" "),a("p",[a("strong",[s._v("竞态条件（数据共享）")])]),s._v(" "),a("p",[s._v("共享数据容易出错。一个经典问题是，两个线程同时执行n=n+1，或者一个线程读取n，而另外一个线程在执行递增操作。由于该操作不是原子的，在不加锁时，n很可能不是预期的值。\n我们称这种情况为竞态（race）：即两个以上的线程同时试图改变某个共享变量。\n解决方法避免共享数据，或者加锁")]),s._v(" "),a("p",[a("strong",[s._v("多线程协调")])]),s._v(" "),a("p",[s._v("一个线程正在生成数据，另一个正在消费，消费者如何等待（并释放CPU）? 生产者怎样才能唤醒消费者？")]),s._v(" "),a("ol",[a("li",[s._v("channel: go中比较推荐的方式，分阻塞和带缓冲")]),s._v(" "),a("li",[s._v("sync.Cond：信号机制")]),s._v(" "),a("li",[s._v("waitGroup：阻塞直到一组goroutine执行完毕")])]),s._v(" "),a("p",[a("strong",[s._v("死锁")])]),s._v(" "),a("p",[s._v("产生条件：多个锁，循环依赖，占用并等待。\n如果你的程序不干活了，但是又没死，那就要看看是否死锁了。")]),s._v(" "),a("h2",{attrs:{id:"爬虫示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#爬虫示例"}},[s._v("#")]),s._v(" 爬虫示例")]),s._v(" "),a("h3",{attrs:{id:"什么是爬虫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是爬虫"}},[s._v("#")]),s._v(" 什么是爬虫")]),s._v(" "),a("ol",[a("li",[s._v("从一个种子网页开始")]),s._v(" "),a("li",[s._v("通过HTTP请求，获取其内容文本")]),s._v(" "),a("li",[s._v("解析其内容包含的所有URL，针对所有URL重复进行2,3")])]),s._v(" "),a("h3",{attrs:{id:"挑战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#挑战"}},[s._v("#")]),s._v(" 挑战")]),s._v(" "),a("p",[s._v("由于网页比较多，网络请求慢，一个接一个抓取时间太长。\n利用I/O并发性：网络延时比网络容量更有限制，可以同时通过多线程并发获取多个URL来增加每秒获取URL个数。\n每个URL只获取“一次”: 为了避免重复抓取导致的网络带宽资源浪费，对远端服务端更友好些，需要记住每个已经访问过的URL。\n知道什么时候完成")]),s._v(" "),a("h3",{attrs:{id:"实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),a("p",[s._v("代码实现可以见：https://pdos.csail.mit.edu/6.824/notes/crawler.go")]),s._v(" "),a("h4",{attrs:{id:"serial爬虫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serial爬虫"}},[s._v("#")]),s._v(" Serial爬虫")]),s._v(" "),a("p",[s._v("深度优先遍历(DFS)全部网络构成的图结构，利用一个名为fetched的map（go中没有set）来保存所有已经抓取过的URL。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Serial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher Fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetched "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" fetched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    fetched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" u "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" urls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Serial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v('我们是否可以在Serial()调用前添加一个"go"?会发生什么?')]),s._v(" "),a("h4",{attrs:{id:"concurrentmutex爬虫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concurrentmutex爬虫"}},[s._v("#")]),s._v(" ConcurrentMutex爬虫")]),s._v(" "),a("ul",[a("li",[s._v("将抓取部分使用go关键字编程并行。但如果仅这么改造，不利于某些手段（sync.WaitGroup）等待子goroutine，而直接返回，那么可能只会抓取到种子URL，同时造成子goroutine的泄露。")]),s._v(" "),a("li",[s._v("如果访问已经抓取的URL集合fetched不加锁，很可能造成多次拉取同一个网页")])]),s._v(" "),a("p",[a("strong",[s._v("为什么使用互斥锁Lock()和Unlock()?")])]),s._v(" "),a("ul",[a("li",[s._v("两个不同的网页包含了同一个URL连接，两个线程同时后去这两个页面，T1读取 fetched[url]，T2 读取 fetched[url]，两者都看到url还没有被获取 (already == false)，两者都取，这是错误的，加锁保证只有一个线程已经看到already==false")]),s._v(" "),a("li",[s._v("map是一个复杂的数据结构，并发更新/更新可能会破坏内部不变量，并发更新/读取可能导致读取崩溃")])]),s._v(" "),a("p",[a("strong",[s._v("去掉锁")])]),s._v(" "),a("p",[s._v("如果在更新map的时候去掉锁，运行结果可能是正确的，因为race其实很难检测。好在go提供了竞态分析工具来查找潜在含有竞态的地方: go run -race crawler.go\n该工具没有做静态分析，而是在动态执行过程中观察、记录各个goroutine的执行轨迹，进行分析")]),s._v(" "),a("p",[a("strong",[s._v("等待执行完成")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" done sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WaitGroup\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" u "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("u "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ConcurrentMutex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//u被拷贝")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\ndone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("WaitGroup内部维护了一个计数器，调用wg.Add(n)时会增加n；调用wait.Done()时会减少1。这时调用wg.Wait()会一直阻塞直到当计数器变为0。所以WaitGroup很适合等待一组goroutine都结束的场景。")]),s._v(" "),a("h4",{attrs:{id:"cocurrentchannel爬虫"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cocurrentchannel爬虫"}},[s._v("#")]),s._v(" CocurrentChannel爬虫")]),s._v(" "),a("p",[s._v("channel是go内置的通道，允许一个线程向另一个线程发送对象，发送方等待某个goroutine接收，接收者等待直到一些goroutine发送。channel既通信又同步，多个线程可以在一个通道上发送和接，channel是开销较低。\n我们可以不使用锁+共享变量，而使用channel通信来实现并发的爬虫。具体做法类似实现一个生产消费者模型，使用channel做消息队列。")]),s._v(" "),a("ol",[a("li",[s._v("创建一个channel，用来接收种子URL")]),s._v(" "),a("li",[s._v("消费者：master不断从channel中取出urls，判断是否抓取过，然后启动新的worker goroutine去抓取")]),s._v(" "),a("li",[s._v("生产者：worker goroutine抓取到给定的任务URL，并将解析的结果urls放回channel")]),s._v(" "),a("li",[s._v("master使用一个变量n来记录创建的任务数，创建一个任务增加1，从channel中获取并处理完毕一份结果减一，当所有任务处理完时，退出程序")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("worker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher Fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" urls\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher Fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    fetched "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" urls "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" u "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" fetched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                fetched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n                n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("worker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ConcurrentChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher Fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("master")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fetcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("p",[a("strong",[s._v("QA")])]),s._v(" "),a("ol",[a("li",[s._v("master读channel，多worker写channel，不会有竞争问题吗？channel是线程安全的。worker只在发送之前写slice，master只在接收后读取slice，因此它们不会在同一时刻使用slice。")]),s._v(" "),a("li",[s._v("channel不需要最后close吗？ 我们使用n追踪了所有执行中的任务数，因此当n为0退出时，channel中不存在任何任务/结果，因此master/worker都不会对channel存在引用，gc collector会将其回收。")]),s._v(" "),a("li",[s._v("为什么在ConcurrentChannel需要用goroutine往channel中写一个url? 如果不使用，master在读取的时候会一直阻塞，并且channel是一个非缓冲channel，如果不用goroutine，将会永远阻塞在写的时候。")]),s._v(" "),a("li",[s._v("什么时候使用共享和锁，而不是通道？大多数问题都可以用两种方式解决，最重要取决于程序员如何思考，对于状态，通常使用数据共享和锁，对于通信，通常使用通道。")])]),s._v(" "),a("h1",{attrs:{id:"rpc-远程过程调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rpc-远程过程调用"}},[s._v("#")]),s._v(" RPC（远程过程调用）")]),s._v(" "),a("p",[s._v("RPC是分布式系统中的一个关键部件，允许客户端通过RPC执行服务端的函数，就像调用本地函数一样。")]),s._v(" "),a("h2",{attrs:{id:"目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[s._v("#")]),s._v(" 目标")]),s._v(" "),a("ol",[a("li",[s._v("容易编写客户端/服务端通信代码")]),s._v(" "),a("li",[s._v("隐藏网络协议细节")]),s._v(" "),a("li",[s._v("将数据（字符串、数组、map等）转换成统一格式(wire format)")])]),s._v(" "),a("h2",{attrs:{id:"软件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件结构"}},[s._v("#")]),s._v(" 软件结构")]),s._v(" "),a("p",[s._v("client app        handler fns")]),s._v(" "),a("p",[s._v("stub fns         dispatcher")]),s._v(" "),a("p",[s._v("RPC lib           RPC lib")]),s._v(" "),a("p",[s._v("net  ------------ net")]),s._v(" "),a("h2",{attrs:{id:"kv示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kv示例"}},[s._v("#")]),s._v(" KV示例")]),s._v(" "),a("p",[s._v("使用Go RPC 库实现的一个key/value存储服务器，包含Put(key, value), Get(key)->value两个接口。")]),s._v(" "),a("h3",{attrs:{id:"主要实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要实现"}},[s._v("#")]),s._v(" 主要实现")]),s._v(" "),a("p",[a("strong",[s._v("公共部分")])]),s._v(" "),a("p",[s._v("为服务端每个handler声明Args和Reply结构体")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Err "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" PutArgs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Key   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n        Value "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" PutReply "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Err Err\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" GetArgs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Key "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" GetReply "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        Err   Err\n        Value "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[a("strong",[s._v("客户端")])]),s._v(" "),a("ol",[a("li",[s._v("通过connect()的Dial()方法创建一个与服务端的TCP连接")]),s._v(" "),a("li",[s._v("get()和put()是客户端“stubs”")]),s._v(" "),a("li",[s._v("Call()会通过RPC库来执行调用")]),s._v(" "),a("li",[s._v("指定服务端函数名、参数、放置应答的位置")]),s._v(" "),a("li",[s._v("库将组装参数、发送请求、等待、解码应答")]),s._v(" "),a("li",[s._v("从Call()返回一个值表示它是否得到一个应答")]),s._v(" "),a("li",[s._v("收到reply.Err表示服务失败等级")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    client "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    args "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" GetArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subject"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    reply "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" GetReply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"KV.Get"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fatal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Value\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[a("strong",[s._v("服务端")])]),s._v(" "),a("ul",[a("li",[s._v("Go要求服务端声明一个对象，其中包含了用作RPC handlers的方法。")]),s._v(" "),a("li",[s._v("服务端使用RPC库注册该对象")]),s._v(" "),a("li",[s._v("服务端接收TCP连接，并将其分配给RPC库")]),s._v(" "),a("li",[s._v("RPC库处理\n"),a("ul",[a("li",[s._v("读取每个请求")]),s._v(" "),a("li",[s._v("为此请求创建一个新的goroutine")]),s._v(" "),a("li",[s._v("解析请求")]),s._v(" "),a("li",[s._v("查找命名对象（在由Register()创建的表中）")]),s._v(" "),a("li",[s._v("调用对象的命名方法(dispatch)")]),s._v(" "),a("li",[s._v("组包进行回复")]),s._v(" "),a("li",[s._v("在TCP连接上写应答")])])]),s._v(" "),a("li",[s._v("服务端Get()和Put()处理：必须加锁，因为RPC库为每个请求创建一个新的goroutine，读取参数，修改应答")])]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        kv "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("KV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        rpcs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" rpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("NewServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        rpcs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tcp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1:1234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fatal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"listen error:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" rpcs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ServeConn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kv "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("KV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("GetArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reply "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("GetReply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ok "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" OK\n                reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" val\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ErrNoKey\n                reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kv "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("KV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("PutArgs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reply "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("PutReply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Value\n        reply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Err "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" OK\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])]),a("h3",{attrs:{id:"一些细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些细节"}},[s._v("#")]),s._v(" 一些细节")]),s._v(" "),a("p",[a("strong",[s._v("绑定：")]),s._v(" 客户端如何知道要与哪台服务器计算机通信？")]),s._v(" "),a("ul",[a("li",[s._v("对于Go的RPC，服务器名字/端口是Dial的参数。")]),s._v(" "),a("li",[s._v("对于大型系统通常有某种名称或配置服务器")])]),s._v(" "),a("p",[a("strong",[s._v("组包：")]),s._v(" 将数据格式化成数据包")]),s._v(" "),a("ul",[a("li",[s._v("Go的RPC库可以传递字符串、数组、对象、map等")]),s._v(" "),a("li",[s._v("Go通过复制指向的数据来传递指针")]),s._v(" "),a("li",[s._v("不能传递通道或函数")])]),s._v(" "),a("h3",{attrs:{id:"异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常处理"}},[s._v("#")]),s._v(" 异常处理")]),s._v(" "),a("p",[s._v("RPC问题：出错如何处理？比如：丢包、网络中断、服务器变慢、服务器宕机")]),s._v(" "),a("p",[s._v("对于客户端RPC库来说，失败意味着什么？")]),s._v(" "),a("ul",[a("li",[s._v("客户端永远不会看到来自服务端的应答")]),s._v(" "),a("li",[s._v("客户端不知道服务端是否看到了请求\n"),a("ul",[a("li",[s._v("服务端可能永远看不到请求")]),s._v(" "),a("li",[s._v("服务端执行了，在发送应答前崩溃了")]),s._v(" "),a("li",[s._v("服务端执行了，在发送回复前网络中断")])])])]),s._v(" "),a("p",[s._v("最简单的故障处理方案：“尽最大努力”")]),s._v(" "),a("ul",[a("li",[s._v("Call()等到响应一段时间")]),s._v(" "),a("li",[s._v("如果没有响应，重新发送请求")]),s._v(" "),a("li",[s._v("重试几次，然后放弃并返回错误")])]),s._v(" "),a("p",[s._v("QA")]),s._v(" "),a("ol",[a("li",[s._v('应用程序是否容易处理“尽最大努力”？特别糟糕的解决方案：客户端执行了Put("k",10)和Put("k",20)都成功了，那Get("k")返回啥？\n[图标，超时，重新发送，原始的到达晚了]')]),s._v(" "),a("li",[s._v("尽最大努力可以吗？只读操作可以，重复执行不会做任何事情的操作，例如：DB检查记录是否已经插入。")])]),s._v(" "),a("p",[s._v("更好的RPC行为：最多一次\n思路：服务端RPC代码检测是否是重复请求，如果重复返回先前的结果，而不是重新执行handler逻辑。")]),s._v(" "),a("p",[s._v("QA\n如何检测重复请求？客户端包含每个请求的唯一ID(XID)，使用相同的XID重新发送")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//server:")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("xid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("xid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n      r "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("xid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r\n      seen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("xid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("至多一次的复杂性")]),s._v(" "),a("ul",[a("li",[s._v("如果两个客户端使用相同的XID怎么办？ 使用随机大数或者将唯一的客户端ID(ip地址)与序列号结合？")]),s._v(" "),a("li",[s._v("服务端最终必须丢弃旧rpc信息，什么时候丢弃是安全的？\n思路：每个客户端都有一个唯一的ID(可能是一个大的随机数)\n每个客户端分配一个RPC序列号，客户端在每个RPC中包含“seen all replies <=X” ，很像TCP序列化和ack。或者一次只允许客户端一个未完成的RPC，seq+1的到达允许服务端丢弃所有<=seq的请求")]),s._v(" "),a("li",[s._v('如何处理重复的请求，而原来仍在执行？\n服务器还不知道应答\n思路：每个执行RPC有个"pending"标志，等待或忽略')])]),s._v(" "),a("p",[s._v("如果at-most-once服务端崩溃并重启该怎么办？")]),s._v(" "),a("ol",[a("li",[s._v("如果内存中最多重复一次信息，服务器将会忘记，并接受重复的请求后重新启动")]),s._v(" "),a("li",[s._v("也许它应该将重复的信息写入磁盘")]),s._v(" "),a("li",[s._v("也许复制服务端也应该复制重复的信息")])]),s._v(" "),a("p",[s._v("Go RPC是一个简单的“at-most-once”形式")]),s._v(" "),a("ol",[a("li",[s._v("打开TCP连接")]),s._v(" "),a("li",[s._v("写请求到TCP连接")]),s._v(" "),a("li",[s._v("Go RPC从未重新发送请求，这样服务端就不会看到重复的请求")]),s._v(" "),a("li",[s._v("如果没有得到回复，Go RPC代码将返回一个错误")]),s._v(" "),a("li",[s._v("可能在超时之后（来之TCP）")]),s._v(" "),a("li",[s._v("可能是服务端没有看到请求")]),s._v(" "),a("li",[s._v("可能是服务端处理了请求，但是服务端/网络在回复返回之前失败了")])]),s._v(" "),a("p",[s._v("怎么处理“恰好一次”？无限重试加上重复检测加上容错服务")])])}),[],!1,null,null,null);t.default=r.exports}}]);